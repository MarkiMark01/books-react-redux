{"version":3,"file":"static/js/438.574f36fc.chunk.js","mappings":"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","sources":["webpack://books-react-redux/./src/components/page/Login/stylesLogin.module.scss?1b70","webpack://books-react-redux/./src/components/shared/styles/stylesGoogleIcon.module.scss?a258","Assets/IconGoogle.jsx","webpack://books-react-redux/./src/components/page/Modal/stylesModal.module.scss?8d18","components/page/Modal/ModalLogin.jsx","components/page/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"login\":\"stylesLogin_login__xZ4K4\",\"loginBox\":\"stylesLogin_loginBox__jc7KZ\",\"login__container\":\"stylesLogin_login__container__Zhy0+\",\"login__buttons\":\"stylesLogin_login__buttons__l0BNE\",\"login__btn\":\"stylesLogin_login__btn__dNFcQ\",\"login__container2\":\"stylesLogin_login__container2__V5WFl\",\"googleBtn\":\"stylesLogin_googleBtn__UCO6R\",\"login__log\":\"stylesLogin_login__log__RU4-8\",\"login__sign\":\"stylesLogin_login__sign__zkFRC\",\"login__name\":\"stylesLogin_login__name__Z8V3G\",\"login__title\":\"stylesLogin_login__title__IZbtV\",\"login__text\":\"stylesLogin_login__text__ICXOn\",\"login__link\":\"stylesLogin_login__link__6Ys3a\",\"login__status\":\"stylesLogin_login__status__hDNOK\"};","// extracted by mini-css-extract-plugin\nexport default {\"googleSvg\":\"stylesGoogleIcon_googleSvg__S63wT\"};","import React from \"react\";\r\n// import styles from \"../components/page/Login/stylesLogin.module.scss\";\r\nimport styles from \"../components/shared/styles/stylesGoogleIcon.module.scss\";\r\n\r\nconst IconGoogle = () => {\r\n  return (\r\n    <svg\r\n      version=\"1.1\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 48 48\"\r\n      className={styles.googleSvg}\r\n    >\r\n      <g>\r\n        <path\r\n          fill=\"#EA4335\"\r\n          d=\"M24 9.5c3.54 0 6.71 1.22 9.21 3.6l6.85-6.85C35.9 2.38 30.47 0 24 0 14.62 0 6.51 5.38 2.56 13.22l7.98 6.19C12.43 13.72 17.74 9.5 24 9.5z\"\r\n        ></path>\r\n        <path\r\n          fill=\"#4285F4\"\r\n          d=\"M46.98 24.55c0-1.57-.15-3.09-.38-4.55H24v9.02h12.94c-.58 2.96-2.26 5.48-4.78 7.18l7.73 6c4.51-4.18 7.09-10.36 7.09-17.65z\"\r\n        ></path>\r\n        <path\r\n          fill=\"#FBBC05\"\r\n          d=\"M10.53 28.59c-.48-1.45-.76-2.99-.76-4.59s.27-3.14.76-4.59l-7.98-6.19C.92 16.46 0 20.12 0 24c0 3.88.92 7.54 2.56 10.78l7.97-6.19z\"\r\n        ></path>\r\n        <path\r\n          fill=\"#34A853\"\r\n          d=\"M24 48c6.48 0 11.93-2.13 15.89-5.81l-7.73-6c-2.15 1.45-4.92 2.3-8.16 2.3-6.26 0-11.57-4.22-13.47-9.91l-7.98 6.19C6.51 42.62 14.62 48 24 48z\"\r\n        ></path>\r\n        <path fill=\"none\" d=\"M0 0h48v48H0z\"></path>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\nexport default IconGoogle;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"modal__backdrop\":\"stylesModal_modal__backdrop__1VQU+\",\"modal__content2\":\"stylesModal_modal__content2__oxG5j\",\"modal__login\":\"stylesModal_modal__login__LLRUK\",\"modal__ok\":\"stylesModal_modal__ok__X3mRF\"};","import React from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport styles from \"./stylesModal.module.scss\";\r\nimport useModal from \"../../shared/hooks/useModal\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default function ModalWindow({ onClose }) {\r\n  useModal(onClose);\r\n\r\n  const handleBackdropClick = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={styles.modal__backdrop} onClick={handleBackdropClick}>\r\n      <div className={styles.modal__content2}>\r\n        <section className={styles.modal__login}>\r\n          <article>Enter your login and password or sign up, please :)</article>\r\n          <button className={styles.modal__ok} onClick={handleBackdropClick}>\r\n            Ok\r\n          </button>\r\n        </section>\r\n      </div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useGoogleLogin } from \"@react-oauth/google\";\r\n\r\nimport useAuth from \"../../shared/hooks/useAuth\";\r\nimport { googleLoginSuccess } from \"../../redux/auth/auth-slice\";\r\nimport styles from \"./stylesLogin.module.scss\";\r\nimport IconGoogle from \"../../../Assets/IconGoogle\";\r\nimport ModalWindow from \"../Modal/ModalLogin\";\r\n// import { GoogleLogin } from \"@react-oauth/google\";\r\n// import { jwtDecode } from \"jwt-decode\";\r\n// import google from \"../../../Assets/google.png\";\r\n// import { supabase } from \"../../../client\";\r\n\r\nconst Login = () => {\r\n  const { t } = useTranslation();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  // const [user, setUser] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n  const isLogin = useAuth();\r\n  const dispatch = useDispatch();\r\n\r\n  const openModal = () => {\r\n    console.log(\"Opening modal\");\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    console.log(\"Closing modal\");\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const onLogin = (e) => {\r\n    e.preventDefault();\r\n    if (email.trim() === \"\" || password.trim() === \"\") {\r\n      openModal();\r\n    }\r\n    // const data = { email, password };\r\n    // dispatch(login(data));\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  const loginGoogle = useGoogleLogin({\r\n    onSuccess: async (response) => {\r\n      try {\r\n        const res = await axios.get(\r\n          \"https://www.googleapis.com/oauth2/v3/userinfo\",\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${response.access_token}`,\r\n            },\r\n          }\r\n        );\r\n        dispatch(\r\n          googleLoginSuccess({\r\n            data: {\r\n              name: res.data.name,\r\n              email: res.data.email,\r\n            },\r\n          })\r\n        );\r\n        navigate(\"/\");\r\n        // console.log(res);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   checkUser();\r\n  //   window.addEventListener(\"hashchange\", function () {\r\n  //     checkUser();\r\n  //   });\r\n  // }, []);\r\n\r\n  // const checkUser = async () => {\r\n  //   const {\r\n  //     data: { session },\r\n  //     error,\r\n  //   } = await supabase.auth.getSession();\r\n  //   if (error) {\r\n  //     console.error(\"Error fetching session:\", error);\r\n  //   } else {\r\n  //     setUser(session?.user ?? null);\r\n  //   }\r\n  // };\r\n\r\n  // const signInWithGithub = async () => {\r\n  //   await supabase.auth.signInWithOAuth({\r\n  //     provider: \"github\",\r\n  //   });\r\n  // };\r\n  // const signOutWithGithub = async () => {\r\n  //   await supabase.auth.signOut();\r\n  //   setUser(null);\r\n  // };\r\n\r\n  if (isLogin) {\r\n    return navigate(-1);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        <section className={styles.login}>\r\n          <section className={styles.loginBox}>\r\n            <form onSubmit={onLogin} className={styles.login__container}>\r\n              <h1 className={styles.login__title}>{t(\"Log in\")}</h1>\r\n              <p>\r\n                {t(\r\n                  \"Log in now to unlock your exclusive access to content and offers\"\r\n                )}\r\n              </p>\r\n\r\n              <section className={styles.googleLoginButton}>\r\n                {/* <GoogleLogin\r\n                className={styles.container}\r\n                onSuccess={(credentialResponse) => {\r\n                  if (credentialResponse && credentialResponse.credential) {\r\n                    const decoded = jwtDecode(credentialResponse.credential);\r\n                    dispatch(googleLoginSuccess(decoded));\r\n                    navigate(\"/\");\r\n                  } else {\r\n                  }\r\n                }}\r\n                onError={() => {\r\n                  console.log(\"Login Failed\");\r\n                }}\r\n              /> */}\r\n              </section>\r\n            </form>\r\n            <button onClick={loginGoogle} className={styles.googleBtn}>\r\n              <IconGoogle />\r\n              Sign in with Google\r\n            </button>\r\n            {/* <button onClick={loginWithGithub}>Sign in with Github</button> */}\r\n            {/* <button onClick={signInWithGithub}>Sign in with Github</button> */}\r\n          </section>\r\n        </section>\r\n        {isModalOpen && <ModalWindow onClose={closeModal}></ModalWindow>}\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n// import axios from \"axios\";\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { NavLink, useNavigate } from \"react-router-dom\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import { useTranslation } from \"react-i18next\";\r\n// import { useGoogleLogin } from \"@react-oauth/google\";\r\n\r\n// import useAuth from \"../../shared/hooks/useAuth\";\r\n// import {\r\n//   googleLoginSuccess,\r\n//   githubLoginSuccess,\r\n// } from \"../../redux/auth/auth-slice\";\r\n// import styles from \"./stylesLogin.module.scss\";\r\n// import IconGoogle from \"../../../Assets/IconGoogle\";\r\n// import ModalWindow from \"../Modal/ModalLogin\";\r\n// import { supabase } from \"../../../client\";\r\n\r\n// // const GITHUB_ID = process.env.REACT_APP_GITHUB_CLIENT_ID;\r\n\r\n// const Login = () => {\r\n//   const { t } = useTranslation();\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [isModalOpen, setIsModalOpen] = useState(false);\r\n//   const [user, setUser] = useState(null);\r\n\r\n//   const navigate = useNavigate();\r\n//   const isLogin = useAuth();\r\n//   const dispatch = useDispatch();\r\n\r\n//   const openModal = () => {\r\n//     setIsModalOpen(true);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setIsModalOpen(false);\r\n//   };\r\n\r\n//   // const onLogin = (e) => {\r\n//   //   e.preventDefault();\r\n//   //   if (email.trim() === \"\" || password.trim() === \"\") {\r\n//   //     openModal();\r\n//   //   }\r\n//   //   const data = { email, password };\r\n//   //   setEmail(\"\");\r\n//   //   setPassword(\"\");\r\n//   // };\r\n\r\n//   const loginGoogle = useGoogleLogin({\r\n//     onSuccess: async (response) => {\r\n//       try {\r\n//         const res = await axios.get(\r\n//           \"https://www.googleapis.com/oauth2/v3/userinfo\",\r\n//           {\r\n//             headers: {\r\n//               Authorization: `Bearer ${response.access_token}`,\r\n//             },\r\n//           }\r\n//         );\r\n//         dispatch(\r\n//           googleLoginSuccess({\r\n//             data: {\r\n//               name: res.data.name,\r\n//               email: res.data.email,\r\n//             },\r\n//           })\r\n//         );\r\n//         navigate(\"/\");\r\n//       } catch (error) {\r\n//         console.error(\"Google login error:\", error);\r\n//       }\r\n//     },\r\n//   });\r\n\r\n//   // useEffect(() => {\r\n//   //   const checkUser = async () => {\r\n//   //     const {\r\n//   //       data: { user },\r\n//   //       error,\r\n//   //     } = await supabase.auth.getUser();\r\n//   //     if (error) {\r\n//   //       console.error(\"Error fetching user:\", error);\r\n//   //     } else {\r\n//   //       setUser(user);\r\n//   //     }\r\n//   //   };\r\n\r\n//   //   checkUser();\r\n//   //   window.addEventListener(\"hashchange\", checkUser);\r\n//   //   return () => window.removeEventListener(\"hashchange\", checkUser);\r\n//   // }, []);\r\n\r\n//   // const signInWithGithub = () => {\r\n//   //   supabase.auth.signInWithOAuth({\r\n//   //     provider: \"github\",\r\n//   //   });\r\n//   // };\r\n\r\n//   // const signOutWithGithub = async () => {\r\n//   //   try {\r\n//   //     await supabase.auth.signOut();\r\n//   //     setUser(null);\r\n//   //   } catch (error) {\r\n//   //     console.error(\"Sign-out error:\", error);\r\n//   //   }\r\n//   // };\r\n\r\n//   const signInWithGithub = async () => {\r\n//     try {\r\n//       const { data, error } = await supabase.auth.signInWithOAuth({\r\n//         provider: \"github\",\r\n//       });\r\n\r\n//       if (error) {\r\n//         throw error;\r\n//       }\r\n\r\n//       dispatch(\r\n//         githubLoginSuccess({\r\n//           name: data.user_metadata.full_name,\r\n//           email: data.user_metadata.email,\r\n//         })\r\n//       );\r\n//       navigate(\"/\");\r\n//     } catch (error) {\r\n//       console.error(\"GitHub login error:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const checkUser = async () => {\r\n//       const {\r\n//         data: { user },\r\n//         error,\r\n//       } = await supabase.auth.getUser();\r\n//       if (error) {\r\n//         console.error(\"Error fetching user:\", error);\r\n//       } else {\r\n//         setUser(user);\r\n//       }\r\n//     };\r\n\r\n//     checkUser();\r\n//     window.addEventListener(\"hashchange\", checkUser);\r\n//     return () => window.removeEventListener(\"hashchange\", checkUser);\r\n//   }, []);\r\n\r\n//   if (isLogin) {\r\n//     return navigate(-1);\r\n//   }\r\n\r\n//   return (\r\n//     <>\r\n//       <main>\r\n//         <section className={styles.login}>\r\n//           <section className={styles.loginBox}>\r\n//             <form\r\n//               // onSubmit={onLogin}\r\n//               className={styles.login__container}\r\n//             >\r\n//               <h1 className={styles.login__title}>{t(\"Log in\")}</h1>\r\n//               <p>\r\n//                 {t(\r\n//                   \"Log in now to unlock your exclusive access to content and offers\"\r\n//                 )}\r\n//               </p>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder={t(\"Email address\")}\r\n//                 value={email}\r\n//                 onChange={(e) => setEmail(e.target.value)}\r\n//                 className={styles.login__log}\r\n//               />\r\n//               <input\r\n//                 type=\"password\"\r\n//                 placeholder={t(\"Password\")}\r\n//                 value={password}\r\n//                 onChange={(e) => setPassword(e.target.value)}\r\n//                 className={styles.login__sign}\r\n//               />\r\n//               <section className={styles.login__buttons}>\r\n//                 <button type=\"submit\" className={styles.login__btn}>\r\n//                   {t(\"Log in\")}\r\n//                 </button>\r\n//               </section>\r\n//             </form>\r\n//             <button onClick={loginGoogle} className={styles.googleBtn}>\r\n//               <IconGoogle />\r\n//               Sign in with Google\r\n//             </button>\r\n//             <button onClick={signInWithGithub}>Sign in with Github</button>\r\n//             <section className={styles.login__text}>\r\n//               <div>\r\n//                 <span>{t(\"Don't have an account?\")}</span>\r\n//               </div>\r\n//             </section>\r\n//             <NavLink to={\"/register\"} className={styles.login__link}>\r\n//               {t(\"Register Now\")}\r\n//             </NavLink>\r\n//           </section>\r\n//         </section>\r\n//         {isModalOpen && <ModalWindow onClose={closeModal}></ModalWindow>}\r\n//       </main>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n"],"names":["IconGoogle","_jsx","version","xmlns","viewBox","className","styles","children","_jsxs","fill","d","modalRoot","document","querySelector","ModalWindow","_ref","onClose","useModal","handleBackdropClick","e","currentTarget","target","createPortal","onClick","Login","t","useTranslation","email","setEmail","useState","password","setPassword","isModalOpen","setIsModalOpen","navigate","useNavigate","isLogin","useAuth","dispatch","useDispatch","loginGoogle","useGoogleLogin","onSuccess","async","res","axios","get","headers","Authorization","concat","response","access_token","googleLoginSuccess","data","name","error","console","log","_Fragment","login","loginBox","onSubmit","preventDefault","trim","login__container","login__title","googleLoginButton","googleBtn","closeModal"],"sourceRoot":""}